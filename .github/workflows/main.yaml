name: main

on:
  workflow_call:
    inputs:
      app_env:
        required: false
        type: string
      aws_region:
          required: true
          type: string
      api_gateway_name:
        required: true
        type: string
      path_contract:
        required: true 
        type: string
      env_file:
        required: true 
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy:
    environment:
      name: ${{ inputs.app_env }}
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws_region }}

      - name: Check out code
        uses: actions/checkout@v2    

      - name: Get API Gateway ID
        id: get_api_gateway_id
        run: |
          api_gateway_name="${{ inputs.api_gateway_name }}"
          api_gateway_id=$(aws apigateway get-rest-apis --query "items[?name=='${api_gateway_name}'].id" --output text)
          echo "::set-output name=api_gateway_id::$api_gateway_id"
        shell: bash

      - name: Set Contract Environment Variables
        run: |
          chmod +x ./scripts/use_envs.sh
          ./scripts/use_envs.sh "${{ inputs.path_contract }}" "${{ inputs.env_file }}" 
          rm -rf ${{ inputs.path_contract }}
          cp "build_gateway.yml" ${{ inputs.path_contract }}
        shell: bash

      - name: Update Contract Api Gateway
        run: |
          aws apigateway put-rest-api --rest-api-id ${{ steps.get_api_gateway_id.outputs.api_gateway_id }} --mode overwrite --body 'fileb://${{ inputs.path_contract }}'

      - name: Deployment Api Gateway
        run: |
          aws apigateway create-deployment --region ${{ inputs.aws_region }} --rest-api-id ${{ steps.get_api_gateway_id.outputs.api_gateway_id }} --stage-name ${{ inputs.app_env }}
